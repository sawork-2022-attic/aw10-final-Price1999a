openapi: 3.0.0
info:
  title: Delivery
  version: 1.0.0
  license:
    name: MIT
#    http://xxx.com/api/v1/user, GET, 获取用户信息
#    http://xxx.com/api/v1/user, POST, 新增用户信息
#    http://xxx.com/api/v1/user, PUT,  修改用户信息
#    http://xxx.com/api/v1/user, DELETE, 删除用户信息
paths:
  /delivery/{userId}:
    get:
      summary: List delivery info in system
      operationId: listInfoByUserID
      tags:
        - delivery
      parameters:
        - name: userId
          in: path
          required: true
          description: User id to view delivery information
          schema:
            type: string
      responses:
        '200':
          description: A paged array of delivery info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Orders"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
#  /delivery-sse/{userId}:
#    get:
#      summary: List delivery info in system
#      operationId: listInfoByUserIDSSE
#      tags:
#        - delivery
#      parameters:
#        - name: userId
#          in: path
#          required: true
#          description: User id to view delivery information
#          schema:
#            type: string
#      responses:
#        '200':
#          description: A paged array of delivery info
#          content:
#            text/event-stream;charset=UTF-8:
#              schema:
#                $ref: "#/components/schemas/Orders"

#                text/event-stream;charset=UTF-8

components:
  schemas:
    Product:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: string
        name:
          type: string
        price:
          type: number
          format: double
        image:
          type: string
    Item:
      type: object
      required:
        - quantity
        - product
      properties:
        quantity:
          type: integer
          format: int32
        product:
          $ref: "#/components/schemas/Product"
    Cart:
      type: array
      items:
        $ref: "#/components/schemas/Item"
    Order:
      type: object
      required:
        - cart
        - orderTotalPrice
        - userID
        - deliveryState
        - deliveryID
      properties:
        cart:
          $ref: "#/components/schemas/Cart"
        orderTotalPrice:
          type: number
          format: double
        userID:
          type: string
        deliveryState:
          type: string
        deliveryID:
          type: string
    Orders:
      type: array
      items:
        $ref: "#/components/schemas/Order"
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string